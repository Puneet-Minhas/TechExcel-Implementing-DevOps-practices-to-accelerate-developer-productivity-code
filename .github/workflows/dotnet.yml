# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:
  
  push:
    branches: [ "main" ]
    paths: 
     - '/Application/*'
   
  pull_request:
    branches: [ "main" ]
    paths: 
     - '/Application/*'
env:
 registryName: '5ajmq5b2nqsoempnpreg.azurecr.io'
 repositoryName: 'techboost/dotnetcoreapp'
 dockerFolderPath: 'Application/src/RazorPagesTestSample'
 tag: ${{ github.run_number }} 
 
permissions:
 id-token: write
 contents: read
 
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: 'Application/src/RazorPagesTestSample'
      
    - name: Build
      run: dotnet build --no-restore
      working-directory: 'Application/src/RazorPagesTestSample'
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: 'Application/tests/RazorPagesTestSample.Tests'
  
  deployApp:
   runs-on: ubuntu-latest
   needs: [build]
   steps:
   - uses: actions/checkout@v3
   
   - name: Docker Login
     run: docker login $registryName -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}

   - name: Docker Build
     run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath

   - name: Docker Push
     run: docker push $registryName/$repositoryName:$tag
  
  configureDevEnv:
   runs-on: ubuntu-latest
   needs: [deployApp]
   steps:
   
     - name: Login via Azure CLI
       uses: azure/login@v1
       with:
        client-id: ${{ secrets.clientID }}
        tenant-id: ${{ secrets.tenantID }}
        subscription-id: ${{ secrets.subscription }} 
        
     - name: Configure Dev WebApp
       uses: Azure/webapps-deploy@v3.0.0
       with:
          app-name: ${{ secrets.DEV_WEBAPPNAME }}
          images: $registryName/$repositoryName:${{ github.run_number }}
          resource-group-name: 'rg-deployment-target'
          
 
